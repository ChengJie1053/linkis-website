"use strict";(self.webpackChunklinkis_web_apache=self.webpackChunklinkis_web_apache||[]).push([[2287],{3905:(e,n,i)=>{i.d(n,{Zo:()=>d,kt:()=>k});var r=i(67294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function o(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,r)}return i}function c(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?o(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function a(e,n){if(null==e)return{};var i,r,t=function(e,n){if(null==e)return{};var i,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)i=o[r],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)i=o[r],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var s=r.createContext({}),l=function(e){var n=r.useContext(s),i=n;return e&&(i="function"==typeof e?e(n):c(c({},n),e)),i},d=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var i=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),u=l(i),m=t,k=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return i?r.createElement(k,c(c({ref:n},d),{},{components:i})):r.createElement(k,c({ref:n},d))}));function k(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=i.length,c=new Array(o);c[0]=m;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a[u]="string"==typeof e?e:t,c[1]=a;for(var l=2;l<o;l++)c[l]=i[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,i)}m.displayName="MDXCreateElement"},1:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=i(87462),t=(i(67294),i(3905));const o={title:"Source Code Directory",sidebar_position:3},c=void 0,a={unversionedId:"deployment/directory-of-sourcecode",id:"version-1.3.0/deployment/directory-of-sourcecode",title:"Source Code Directory",description:"Linkis source code hierarchical directory structure description, if you want to learn more about Linkis modules, please check Linkis related architecture design",source:"@site/versioned_docs/version-1.3.0/deployment/directory-of-sourcecode.md",sourceDirName:"deployment",slug:"/deployment/directory-of-sourcecode",permalink:"/docs/1.3.0/deployment/directory-of-sourcecode",draft:!1,editUrl:"https://github.com/apache/linkis-website/edit/dev/versioned_docs/version-1.3.0/deployment/directory-of-sourcecode.md",tags:[],version:"1.3.0",sidebarPosition:3,frontMatter:{title:"Source Code Directory",sidebar_position:3},sidebar:"version-1.3.0/tutorialSidebar",previous:{title:"Kubernetes Deployment",permalink:"/docs/1.3.0/deployment/deploy-to-kubernetes"},next:{title:"Installation Package Directory",permalink:"/docs/1.3.0/deployment/directory-of-unpack"}},s={},l=[],d={toc:l};function u(e){let{components:n,...i}=e;return(0,t.kt)("wrapper",(0,r.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("blockquote",null,(0,t.kt)("p",{parentName:"blockquote"},"Linkis source code hierarchical directory structure description, if you want to learn more about Linkis modules, please check ",(0,t.kt)("a",{parentName:"p",href:"/docs/1.3.0/architecture/overview"},"Linkis related architecture design"))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-html"},"|-- linkis-dist //Compile the module of the entire project\n|        |-- assembly-combined\n|        |-- bin\n|        |-- deploy-config\n|        |-- src\n|-- linkis-commons //Core abstraction, which contains all common modules\n|        |-- linkis-common //Common module, built-in many common tools\n|        |-- linkis-hadoop-common\n|        |-- linkis-httpclient //Java SDK top-level interface\n|        |-- linkis-message-scheduler\n|        |-- linkis-module\n|        |-- linkis-mybatis //SpringCloud's Mybatis module\n|        |-- linkis-protocol\n|        |-- linkis-rpc //RPC module, complex two-way communication based on Feign\n|        |-- linkis-scheduler //General scheduling module\n|        |-- linkis-storage\n|        |\n|-- linkis-computation-governance //computing governance service\n|        |-- linkis-client //Java SDK, users can directly access Linkis through Client\n|        |-- linkis-computation-governance-common\n|        |-- linkis-engineconn\n|        |-- linkis-engineconn-manager\n|        |-- linkis-entrance //General low-level entrance module\n|        |-- linkis-entrance-client\n|        |-- linkis-jdbc-driver\n|        |-- linkis-manager\n|\n|-- linkis-engineconn-plugins\n|        |-- engineconn-plugins\n|        |-- linkis-engineconn-plugin-framework\n|\n|-- linkis-extensions\n|        |-- linkis-io-file-client\n|-- linkis-orchestrator\n|        |-- linkis-code-orchestrator\n|        |-- linkis-computation-orchestrator\n|        |-- linkis-orchestrator-core\n|        |-- plugin\n|-- linkis-public-enhancements //Public enhancement services\n|        |-- linkis-bml // Material library\n|        |-- linkis-context-service //Unified context\n|        |-- linkis-datasource //Data source service\n|        |-- linkis-publicservice //Public Service\n|-- linkis-spring-cloud-services //Microservice governance\n|        |-- linkis-service-discovery\n|        |-- linkis-service-gateway //Gateway\n|-- db //Database information\n|-- license-doc //license details\n|        |-- license //The license of the background project\n|         - ui-license //License of linkis management desk\n|-- tool //Tool script\n|        |-- check.sh\n|        |-- dependencies\n|\n|-- web //Management desk code of linkis\n|\n|-- scalastyle-config.xml //Scala code format check configuration file\n|-- CONTRIBUTING.md\n|-- CONTRIBUTING_CN.md\n|-- DISCLAIMER-WIP\n|-- LICENSE //LICENSE of the project source code\n|-- LICENSE-binary //LICENSE of binary package\n|-- LICENSE-binary-ui //LICENSE of the front-end compiled package\n|-- NOTICE //NOTICE of project source code\n|-- NOTICE-binary // NOTICE of binary package\n|-- NOTICE-binary-ui // NOTICE of front-end binary package\n|-- licenses-binary The detailed dependent license file of the binary package\n|-- licenses-binary-ui //The license file that the front-end compilation package depends on in detail\n|-- README.md\n|-- README_CN.md\n")))}u.isMDXComponent=!0}}]);